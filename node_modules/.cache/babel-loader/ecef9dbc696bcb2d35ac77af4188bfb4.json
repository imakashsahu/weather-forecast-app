{"remainingRequest":"/home/asahu/Projects/vue/weather_forecast_app/node_modules/babel-loader/lib/index.js!/home/asahu/Projects/vue/weather_forecast_app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/asahu/Projects/vue/weather_forecast_app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/asahu/Projects/vue/weather_forecast_app/src/components/CurrentWeather.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/asahu/Projects/vue/weather_forecast_app/src/components/CurrentWeather.vue","mtime":1635156663720},{"path":"/home/asahu/Projects/vue/weather_forecast_app/babel.config.js","mtime":1634887286653},{"path":"/home/asahu/Projects/vue/weather_forecast_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/asahu/Projects/vue/weather_forecast_app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/asahu/Projects/vue/weather_forecast_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/asahu/Projects/vue/weather_forecast_app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2FzYWh1L1Byb2plY3RzL3Z1ZS93ZWF0aGVyX2ZvcmVjYXN0X2FwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IFdlYXRoZXJJY29uIGZyb20gJy4vV2VhdGhlckljb24udnVlJzsKaW1wb3J0IEN1cnJlbnRTdGF0cyBmcm9tICcuL0N1cnJlbnRTdGF0cy52dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0N1cnJlbnRXZWF0aGVyJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8gU2VhcmNoIEJhcgogICAgICBzZWFyY2hCYXI6IG51bGwsCiAgICAgIGNpdHk6IG51bGwsCiAgICAgIC8vIExvY2F0aW9uIEdlb3RhZ2luZwogICAgICBsb2NhdGlvbjogbnVsbCwKICAgICAgZXJyb3JTdHI6IG51bGwsCiAgICAgIGxhdGl0dWRlOiAwLAogICAgICBsb25naXR1ZGU6IDAsCiAgICAgIC8vIE9wZW4gV2VhdGhlcgogICAgICBhcGlLZXk6ICdmZGEzZTk4OTY3NzI2MGE0Mzg5Mjk5NmI2Mjk3N2VhMycsCiAgICAgIHdlYXRoZXI6IFtdLAogICAgICBhbGxXZWF0aGVyOiBbXSwKICAgICAgdGltZXN0YW1wOiBudWxsLAogICAgICB0ZW1wOiBudWxsCiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgV2VhdGhlckljb246IFdlYXRoZXJJY29uLAogICAgQ3VycmVudFN0YXRzOiBDdXJyZW50U3RhdHMKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMubGF0aXR1ZGUgPSB0aGlzLiRjb29raWVzLmdldCgnbGF0aXR1ZGUnKTsKICAgIHRoaXMubG9uZ2l0dWRlID0gdGhpcy4kY29va2llcy5nZXQoJ2xvbmdpdHVkZScpOwogICAgY29uc29sZS5sb2codGhpcy5sb25naXR1ZGUpOwoKICAgIGlmICh0aGlzLmxvbmdpdHVkZSA9PSAwKSB7CiAgICAgIC8vIExvY2F0aW9uIEdlb3RhZ2luZyAmIENvb2tpZXMKICAgICAgbmF2aWdhdG9yLmdlb2xvY2F0aW9uLmdldEN1cnJlbnRQb3NpdGlvbihmdW5jdGlvbiAocG9zKSB7CiAgICAgICAgX3RoaXMubG9jYXRpb24gPSBwb3M7CiAgICAgICAgX3RoaXMubGF0aXR1ZGUgPSBfdGhpcy5sb2NhdGlvbi5jb29yZHMubGF0aXR1ZGU7CiAgICAgICAgX3RoaXMubG9uZ2l0dWRlID0gX3RoaXMubG9jYXRpb24uY29vcmRzLmxvbmdpdHVkZTsKCiAgICAgICAgX3RoaXMuZ2V0Q2l0eSgpOwogICAgICB9LCBmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgX3RoaXMuZXJyb3JTdHIgPSBlcnIubWVzc2FnZTsKICAgICAgfSk7CiAgICB9IGVsc2UgewogICAgICB0aGlzLmdldENpdHkoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHNlYXJjaENpdHk6IGZ1bmN0aW9uIHNlYXJjaENpdHkoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpczIuY2l0eSA9IF90aGlzMi5zZWFyY2hCYXI7IC8vIEdldCBDaXR5IENvb3JkaW5hdGVzCgogICAgICAgICAgICAgICAgYXhpb3MuZ2V0KCdodHRwOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS93ZWF0aGVyP3E9JyArIF90aGlzMi5jaXR5ICsgJyZhcHBpZD0nICsgX3RoaXMyLmFwaUtleSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi53ZWF0aGVyID0gcmVzcG9uc2UuZGF0YSwgX3RoaXMyLmxhdGl0dWRlID0gX3RoaXMyLndlYXRoZXJbJ2Nvb3JkJ11bJ2xhdCddLCBfdGhpczIubG9uZ2l0dWRlID0gX3RoaXMyLndlYXRoZXJbJ2Nvb3JkJ11bJ2xvbiddLCBfdGhpczIuZ2V0V2VhdGhlcigpLCAvLyBDb29raWVzCiAgICAgICAgICAgICAgICAgIF90aGlzMi4kY29va2llcy5zZXQoJ2xhdGl0dWRlJywgX3RoaXMyLmxhdGl0dWRlKSwgX3RoaXMyLiRjb29raWVzLnNldCgnbG9uZ2l0dWRlJywgX3RoaXMyLmxvbmdpdHVkZSk7CiAgICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGFsZXJ0KCdDaXR5IE5vdCBGb3VuZCcpLCBjb25zb2xlLmxvZyhlcnJvciksIF90aGlzMi4kY29va2llcy5zZXQoJ2xhdGl0dWRlJywgMCksIF90aGlzMi4kY29va2llcy5zZXQoJ2xvbmdpdHVkZScsIDApOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBnZXRXZWF0aGVyOiBmdW5jdGlvbiBnZXRXZWF0aGVyKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAvLyBHZXQgQ2l0eSBXZWF0aGVyCiAgICAgICAgICAgICAgICBheGlvcy5nZXQoJ2h0dHA6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L29uZWNhbGw/bG9uPScgKyBfdGhpczMubG9uZ2l0dWRlICsgJyZsYXQ9JyArIF90aGlzMy5sYXRpdHVkZSArICcmYXBwaWQ9JyArIF90aGlzMy5hcGlLZXkpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczMuYWxsV2VhdGhlciA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGFsZXJ0KCdTb21ldGhpbmcgd2VudCB3cm9uZyB3aXRoIHRoZSBBUEknKSwgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGdldENpdHk6IGZ1bmN0aW9uIGdldENpdHkoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIC8vIEdldCBDaXR5IE5hbWUKICAgICAgICAgICAgICAgIGF4aW9zLmdldCgnaHR0cDovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvd2VhdGhlcj9sb249JyArIF90aGlzNC5sb25naXR1ZGUgKyAnJmxhdD0nICsgX3RoaXM0LmxhdGl0dWRlICsgJyZhcHBpZD0nICsgX3RoaXM0LmFwaUtleSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNC53ZWF0aGVyID0gcmVzcG9uc2UuZGF0YSwgX3RoaXM0LmxhdGl0dWRlID0gX3RoaXM0LndlYXRoZXJbJ2Nvb3JkJ11bJ2xhdCddLCBfdGhpczQubG9uZ2l0dWRlID0gX3RoaXM0LndlYXRoZXJbJ2Nvb3JkJ11bJ2xvbiddLCBfdGhpczQuZ2V0V2VhdGhlcigpOwogICAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBhbGVydCgnQ2l0eSBOb3QgRm91bmQnKSwgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGxvY2FsVGltZTogZnVuY3Rpb24gbG9jYWxUaW1lKHRpbWVzdGFtcCkgewogICAgICB0aGlzLnRpbWVzdGFtcCA9IERhdGUodGltZXN0YW1wKTsKICAgICAgcmV0dXJuIHRoaXMudGltZXN0YW1wOwogICAgfSwKICAgIGxvY2FsVGltZUhvdXI6IGZ1bmN0aW9uIGxvY2FsVGltZUhvdXIodGltZXN0YW1wKSB7CiAgICAgIHRoaXMudGltZXN0YW1wID0gbmV3IERhdGUodGltZXN0YW1wICogMTAwMCk7CiAgICAgIHJldHVybiB0aGlzLnRpbWVzdGFtcC50b0xvY2FsZVN0cmluZygnZW4tVVMnLCB7CiAgICAgICAgaG91cjogJ251bWVyaWMnLAogICAgICAgIGhvdXIxMjogdHJ1ZSwKICAgICAgICBtaW51dGU6ICcyLWRpZ2l0JwogICAgICB9KTsKICAgIH0sCiAgICB0ZW1wVG9GYWhyOiBmdW5jdGlvbiB0ZW1wVG9GYWhyKHRlbXApIHsKICAgICAgdGhpcy50ZW1wID0gdGVtcCAqIDkgLyA1IC0gNDU5LjY3OwogICAgICByZXR1cm4gTWF0aC5yb3VuZCh0aGlzLnRlbXApOwogICAgfSwKICAgIHRlbXBUb0NlbDogZnVuY3Rpb24gdGVtcFRvQ2VsKHRlbXApIHsKICAgICAgdGhpcy50ZW1wID0gdGVtcCAtIDI3My4xNTsKICAgICAgcmV0dXJuIE1hdGgucm91bmQodGhpcy50ZW1wKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["CurrentWeather.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,WAAA,MAAA,mBAAA;AACA,OAAA,YAAA,MAAA,oBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA;AACA,MAAA,SAAA,EAAA,IAFA;AAGA,MAAA,IAAA,EAAA,IAHA;AAIA;AACA,MAAA,QAAA,EAAA,IALA;AAMA,MAAA,QAAA,EAAA,IANA;AAOA,MAAA,QAAA,EAAA,CAPA;AAQA,MAAA,SAAA,EAAA,CARA;AASA;AACA,MAAA,MAAA,EAAA,kCAVA;AAWA,MAAA,OAAA,EAAA,EAXA;AAYA,MAAA,UAAA,EAAA,EAZA;AAaA,MAAA,SAAA,EAAA,IAbA;AAcA,MAAA,IAAA,EAAA;AAdA,KAAA;AAgBA,GAnBA;AAoBA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA,WADA;AAEA,IAAA,YAAA,EAAA;AAFA,GApBA;AAwBA,EAAA,OAxBA,qBAwBA;AAAA;;AACA,SAAA,QAAA,GAAA,KAAA,QAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AACA,SAAA,SAAA,GAAA,KAAA,QAAA,CAAA,GAAA,CAAA,WAAA,CAAA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,KAAA,SAAA;;AACA,QAAA,KAAA,SAAA,IAAA,CAAA,EAAA;AACA;AACA,MAAA,SAAA,CAAA,WAAA,CAAA,kBAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,GAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,KAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,KAAA,CAAA,QAAA,CAAA,MAAA,CAAA,SAAA;;AACA,QAAA,KAAA,CAAA,OAAA;AACA,OALA,EAKA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,GAAA,CAAA,OAAA;AACA,OAPA;AAQA,KAVA,MAUA;AACA,WAAA,OAAA;AACA;AACA,GAzCA;AA0CA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,IAAA,GAAA,MAAA,CAAA,SAAA,CADA,CAEA;;AACA,gBAAA,KAAA,CAAA,GAAA,CAAA,sDAAA,MAAA,CAAA,IAAA,GAAA,SAAA,GAAA,MAAA,CAAA,MAAA,EACA,IADA,CACA,UAAA,QAAA;AAAA,yBACA,MAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA,EACA,MAAA,CAAA,QAAA,GAAA,MAAA,CAAA,OAAA,CAAA,OAAA,EAAA,KAAA,CADA,EAEA,MAAA,CAAA,SAAA,GAAA,MAAA,CAAA,OAAA,CAAA,OAAA,EAAA,KAAA,CAFA,EAGA,MAAA,CAAA,UAAA,EAHA,EAIA;AACA,kBAAA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA,UAAA,EAAA,MAAA,CAAA,QAAA,CALA,EAMA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA,WAAA,EAAA,MAAA,CAAA,SAAA,CAPA;AAAA,iBADA,EAUA,KAVA,CAUA,UAAA,KAAA;AAAA,yBACA,KAAA,CAAA,gBAAA,CAAA,EACA,OAAA,CAAA,GAAA,CAAA,KAAA,CADA,EAEA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA,UAAA,EAAA,CAAA,CAFA,EAGA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA,WAAA,EAAA,CAAA,CAJA;AAAA,iBAVA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA,KApBA;AAqBA,IAAA,UArBA,wBAqBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,gBAAA,KAAA,CAAA,GAAA,CAAA,wDAAA,MAAA,CAAA,SAAA,GAAA,OAAA,GAAA,MAAA,CAAA,QAAA,GAAA,SAAA,GAAA,MAAA,CAAA,MAAA,EACA,IADA,CACA,UAAA,QAAA;AAAA,yBACA,MAAA,CAAA,UAAA,GAAA,QAAA,CAAA,IADA;AAAA,iBADA,EAIA,KAJA,CAIA,UAAA,KAAA;AAAA,yBAAA,KAAA,CAAA,mCAAA,CAAA,EAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA;AAAA,iBAJA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,KA5BA;AA6BA,IAAA,OA7BA,qBA6BA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,gBAAA,KAAA,CAAA,GAAA,CAAA,wDAAA,MAAA,CAAA,SAAA,GAAA,OAAA,GAAA,MAAA,CAAA,QAAA,GAAA,SAAA,GAAA,MAAA,CAAA,MAAA,EACA,IADA,CACA,UAAA,QAAA;AAAA,yBACA,MAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA,EACA,MAAA,CAAA,QAAA,GAAA,MAAA,CAAA,OAAA,CAAA,OAAA,EAAA,KAAA,CADA,EAEA,MAAA,CAAA,SAAA,GAAA,MAAA,CAAA,OAAA,CAAA,OAAA,EAAA,KAAA,CAFA,EAGA,MAAA,CAAA,UAAA,EAJA;AAAA,iBADA,EAOA,KAPA,CAOA,UAAA,KAAA;AAAA,yBAAA,KAAA,CAAA,gBAAA,CAAA,EAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA;AAAA,iBAPA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,KAvCA;AAwCA,IAAA,SAxCA,qBAwCA,SAxCA,EAwCA;AACA,WAAA,SAAA,GAAA,IAAA,CAAA,SAAA,CAAA;AACA,aAAA,KAAA,SAAA;AACA,KA3CA;AA4CA,IAAA,aA5CA,yBA4CA,SA5CA,EA4CA;AACA,WAAA,SAAA,GAAA,IAAA,IAAA,CAAA,SAAA,GAAA,IAAA,CAAA;AACA,aAAA,KAAA,SAAA,CAAA,cAAA,CAAA,OAAA,EAAA;AAAA,QAAA,IAAA,EAAA,SAAA;AAAA,QAAA,MAAA,EAAA,IAAA;AAAA,QAAA,MAAA,EAAA;AAAA,OAAA,CAAA;AACA,KA/CA;AAgDA,IAAA,UAhDA,sBAgDA,IAhDA,EAgDA;AACA,WAAA,IAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,GAAA,MAAA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,KAAA,IAAA,CAAA;AACA,KAnDA;AAoDA,IAAA,SApDA,qBAoDA,IApDA,EAoDA;AACA,WAAA,IAAA,GAAA,IAAA,GAAA,MAAA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,KAAA,IAAA,CAAA;AACA;AAvDA;AA1CA,CAAA","sourcesContent":["<template>\n  <div class=\"current-weather-container\">\n    <div class=\"search-wrapper\">\n      <input v-model=\"searchBar\" v-on:keyup.enter=\"searchCity()\" class=\"search-input\" type=\"text\" placeholder=\"Enter City Name\">\n      <button class=\"search-button\" v-on:click=\"searchCity()\">\n        <i class=\"fa fa-search-location\"></i>\n      </button>\n    </div>\n    <div class=\"current-location-warpper\">\n      <WeatherIcon msg='currentStats'/> \n    </div>\n    <div class=\"location-warpper\">\n      <h1 class=\"city-name\">{{ this.weather['name'] }}<span>, {{ this.allWeather['timezone'] }}</span></h1>\n      <p class=\"current-timestamp\">As on {{ localTime(this.allWeather['current']['dt']) }} &nbsp;<span v-on:click=\"getCity()\"><i class=\"fa fa-redo\"></i></span></p>\n    </div>\n    <div class=\"temp-wrapper\">\n      <h1 class=\"temp\">{{ tempToFahr(this.allWeather['current']['temp']) }}°</h1>\n      <p class=\"temp-desc\">{{ this.allWeather['current']['weather'][0]['main'] }}</p>\n      <p class=\"feels\"> {{ this.weather['name'] }} Feels like : {{ tempToFahr(this.allWeather['current']['temp']) }}°</p>\n    </div>\n    <div class=\"additional-info-wrapper\">\n      <p class=\"sunriseTime\"><i class=\"wi wi-sunrise\"></i><span>{{ localTimeHour(this.allWeather['current']['sunrise']) }}</span></p>\n      <p class=\"sunsetTime\"><i class=\"wi wi-sunset\"></i><span>{{ localTimeHour(this.allWeather['current']['sunset']) }}</span></p>\n      <p class=\"celsius\"><i class=\"wi wi-thermometer\"></i><span>{{ tempToCel(this.allWeather['current']['temp']) }}</span><i class=\"wi wi-celsius\"></i></p>\n      <p class=\"fahrenheit\"><i class=\"wi wi-thermometer\"></i><span>{{ tempToFahr(this.allWeather['current']['temp']) }}</span><i class=\"wi wi-fahrenheit\"></i></p>\n    </div>\n    <div class=\"currentStats\">\n      <CurrentStats :test_msg='hi'/> \n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport WeatherIcon from './WeatherIcon.vue'\nimport CurrentStats from './CurrentStats.vue'\n\nexport default {\n  name: 'CurrentWeather',\n  data() {\n    return {\n      // Search Bar\n      searchBar: null,\n      city: null,\n      // Location Geotaging\n      location: null,\n      errorStr: null,\n      latitude: 0,\n      longitude: 0,\n      // Open Weather\n      apiKey: 'fda3e989677260a43892996b62977ea3',\n      weather: [],\n      allWeather: [],\n      timestamp: null,\n      temp: null,\n    }\n  },\n  components: {\n    WeatherIcon,\n    CurrentStats,\n  },\n  created() {\n    this.latitude = this.$cookies.get('latitude');\n    this.longitude = this.$cookies.get('longitude');\n    console.log(this.longitude)\n    if (this.longitude == 0) {\n      // Location Geotaging & Cookies\n      navigator.geolocation.getCurrentPosition(pos => {\n        this.location = pos;\n        this.latitude = this.location.coords.latitude;\n        this.longitude = this.location.coords.longitude;\n        this.getCity()\n      }, err => {\n        this.errorStr = err.message;\n      })\n    } else {\n      this.getCity()\n    }\n  },\n  methods: {\n    async searchCity() {\n      this.city = this.searchBar;\n      // Get City Coordinates\n      axios.get('http://api.openweathermap.org/data/2.5/weather?q='+ this.city +'&appid=' + this.apiKey)\n      .then(response => (\n        this.weather = response.data,\n        this.latitude = this.weather['coord']['lat'],\n        this.longitude = this.weather['coord']['lon'],\n        this.getWeather(),\n        // Cookies\n        this.$cookies.set('latitude',this.latitude),\n        this.$cookies.set('longitude',this.longitude)\n        ))\n      .catch(error => (\n        alert('City Not Found'), \n        console.log(error),\n        this.$cookies.set('latitude',0),\n        this.$cookies.set('longitude',0)\n        ))\n    },\n    async getWeather() {\n      // Get City Weather\n      axios.get('http://api.openweathermap.org/data/2.5/onecall?lon=' + this.longitude + '&lat=' + this.latitude + '&appid=' + this.apiKey)\n      .then(response => (\n        this.allWeather = response.data\n        ))\n      .catch(error => (alert('Something went wrong with the API'), console.log(error)))\n    },\n    async getCity() {\n      // Get City Name\n      axios.get('http://api.openweathermap.org/data/2.5/weather?lon=' + this.longitude + '&lat=' + this.latitude +'&appid=' + this.apiKey)\n      .then(response => (\n        this.weather = response.data,\n        this.latitude = this.weather['coord']['lat'],\n        this.longitude = this.weather['coord']['lon'],\n        this.getWeather()\n        ))\n      .catch(error => (alert('City Not Found'), console.log(error)))\n    },\n    localTime(timestamp) {\n      this.timestamp = Date(timestamp)\n      return this.timestamp\n    },\n    localTimeHour(timestamp) {\n      this.timestamp = new Date(timestamp * 1000)\n      return this.timestamp.toLocaleString('en-US', { hour: 'numeric', hour12: true, minute: '2-digit'})\n    },\n    tempToFahr(temp) {\n      this.temp = temp * 9/5 - 459.67\n      return Math.round(this.temp)\n    },\n    tempToCel(temp) {\n      this.temp = temp - 273.15\n      return Math.round(this.temp)\n    },\n  }\n}\n</script>\n\n<style scoped>\n.current-weather-container {\n  width: 100%;\n}\n\n.search-wrapper {\n  border-radius: 30px;\n  background-color: #fff;\n  padding-right: 12px;\n  height: 60px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  color: #1f2937;\n  box-shadow: 0 2px 6px 0 rgba(136,148,171,.2),0 24px 20px -24px rgba(71,82,107,.1);\n  overflow: hidden;\n  box-shadow: #4A4A4A;\n  border: 0.1px solid #D6D6D6;\n}\n\n.search-input {\n  border: none;\n  flex: 1;\n  outline: none;\n  height: 100%;\n  padding: 0 20px;\n  font-size: 16px;\n  background-color: #fff;\n  color: #1f1c2e;\n  opacity: 0.6;\n}\n\n.search-button {\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n}\n\n.search-button i {\n  font-size: 30px;\n  color: #909090;\n}\n\n.location-warpper {\n  margin-top: 80px;\n}\n\n.city-name > span {\n  font-size: 70%;\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  color: #878686;\n}\n\n.current-timestamp {\n  margin-top: -15px;\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  color: #878686;\n}\n\n.current-timestamp > span {\n  cursor: pointer;\n}\n\n.temp {\n  margin-top: -15px;\n  font-size: 100px;\n  color: orange;\n}\n\n.temp-desc {\n  margin-top: -80px;\n  margin-left: 10px;\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  color: #878686;\n  font-size: 20px;\n}\n\n.feels {\n  margin-top: -10px;\n  margin-left: 10px;\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  color: #878686;\n}\n\n\n.additional-info-wrapper {\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 10px;\n}\n\n.sunriseTime, .sunsetTime, .fahrenheit, .celsius {\n  margin-right: 30px;\n  font-size: 20px;\n  color: #878686;\n}\n\n.sunriseTime > i, .sunsetTime > i {\n  margin-right: 20px;\n}\n\n.fahrenheit > i, .celsius > i {\n  margin-right: 20px;\n}\n\n</style>"],"sourceRoot":"src/components"}]}